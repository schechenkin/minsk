--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: quicksort.c, Line: 35, Column: 9 }
Function:        partition
Args:
  - String:          ''''
  - Callee:          exch
    DebugLoc:        { File: quicksort.c, Line: 12, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          partition
    DebugLoc:        { File: quicksort.c, Line: 19, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          partition
  - String:          ':'
  - Line:            '17'
  - String:          ':'
  - Column:          '9'
  - String:          ';'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: quicksort.c, Line: 37, Column: 5 }
Function:        partition
Args:
  - String:          ''''
  - Callee:          exch
    DebugLoc:        { File: quicksort.c, Line: 12, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          partition
    DebugLoc:        { File: quicksort.c, Line: 19, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-25'
  - String:          ', threshold='
  - Threshold:       '337'
  - String:          ')'
  - String:          ' at callsite '
  - String:          partition
  - String:          ':'
  - Line:            '19'
  - String:          ':'
  - Column:          '5'
  - String:          ';'
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
Function:        partition
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
Function:        partition
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        partition
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: quicksort.c, Line: 15, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        partition
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: quicksort.c, Line: 15, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
Function:        partition
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
Function:        partition
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: quicksort.c, Line: 45, Column: 19 }
Function:        quicksort
Args:
  - String:          ''''
  - Callee:          partition
    DebugLoc:        { File: quicksort.c, Line: 19, Column: 0 }
  - String:          ''' inlined into '''
  - Caller:          quicksort
    DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
  - String:          ''''
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '50'
  - String:          ', threshold='
  - Threshold:       '225'
  - String:          ')'
  - String:          ' at callsite '
  - String:          quicksort
  - String:          ':'
  - Line:            '4'
  - String:          ':'
  - Column:          '19'
  - String:          ';'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: quicksort.c, Line: 46, Column: 5 }
Function:        quicksort
Args:
  - String:          ''''
  - Callee:          quicksort
    DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          quicksort
    DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          recursive
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: quicksort.c, Line: 47, Column: 5 }
Function:        quicksort
Args:
  - String:          ''''
  - Callee:          quicksort
    DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          quicksort
    DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          recursive
...
--- !Passed
Pass:            tailcallelim
Name:            tailcall-recursion
DebugLoc:        { File: quicksort.c, Line: 47, Column: 5 }
Function:        quicksort
Args:
  - String:          transforming tail recursion into loop
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
Function:        quicksort
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
Function:        quicksort
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
Function:        quicksort
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
Function:        quicksort
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        quicksort
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: quicksort.c, Line: 43, Column: 9 }
Function:        quicksort
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: quicksort.c, Line: 46, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
Function:        quicksort
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: quicksort.c, Line: 15, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: quicksort.c, Line: 46, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        quicksort
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: quicksort.c, Line: 15, Column: 10 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
Function:        quicksort
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: quicksort.c, Line: 15, Column: 10 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: quicksort.c, Line: 46, Column: 5 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        quicksort
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: quicksort.c, Line: 15, Column: 10 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
Function:        quicksort
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
...
--- !Passed
Pass:            licm
Name:            InstSunk
DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
Function:        quicksort
Args:
  - String:          'sinking '
  - Inst:            getelementptr
    DebugLoc:        { File: quicksort.c, Line: 27, Column: 20 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
Function:        quicksort
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        quicksort
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: quicksort.c, Line: 55, Column: 38 }
Function:        main
Args:
  - Callee:          malloc
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: quicksort.c, Line: 56, Column: 5 }
Function:        main
Args:
  - Callee:          fillArrayWithRandomNumbers
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: quicksort.c, Line: 57, Column: 5 }
Function:        main
Args:
  - Callee:          start_timer
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: quicksort.c, Line: 59, Column: 5 }
Function:        main
Args:
  - Callee:          stop_timer
  - String:          ' will not be inlined into '
  - Caller:          main
    DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NeverInline
DebugLoc:        { File: quicksort.c, Line: 58, Column: 5 }
Function:        main
Args:
  - String:          ''''
  - Callee:          quicksort
    DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
  - String:          ''' not inlined into '''
  - Caller:          main
    DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
  - String:          ''' because it should never be inlined '
  - String:          '(cost=never)'
  - String:          ': '
  - Reason:          recursive
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        partition
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        partition
Args:
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: quicksort.c, Line: 26, Column: 9 }
Function:        partition
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: quicksort.c, Line: 26, Column: 9 }
Function:        partition
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: quicksort.c, Line: 27, Column: 18 }
Function:        partition
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        partition
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: quicksort.c, Line: 0, Column: 0 }
Function:        partition
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        quicksort
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        quicksort
Args:
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: quicksort.c, Line: 26, Column: 9 }
Function:        quicksort
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: quicksort.c, Line: 26, Column: 9 }
Function:        quicksort
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: quicksort.c, Line: 27, Column: 18 }
Function:        quicksort
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        quicksort
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '0'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotPossible
DebugLoc:        { File: quicksort.c, Line: 0, Column: 0 }
Function:        quicksort
Args:
  - String:          'Cannot SLP vectorize list: vectorization was impossible'
  - String:          ' with available vectorization factors'
...
--- !Passed
Pass:            TTI
Name:            DontUnroll
DebugLoc:        { File: quicksort.c, Line: 43, Column: 9 }
Function:        quicksort
Args:
  - String:          'advising against unrolling the loop because it contains a '
  - Call:            call
    DebugLoc:        { File: quicksort.c, Line: 46, Column: 5 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: quicksort.c, Line: 22, Column: 19 }
Function:        quicksort
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        quicksort
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: quicksort.c, Line: 12, Column: 0 }
Function:        exch
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function '''
  - Function:        exch
  - String:          ''''
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 13, Column: 21 }
Function:        exch
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      entry
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: quicksort.c, Line: 12, Column: 0 }
Function:        exch
Args:
  - NumInstructions: '5'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        partition
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.008000e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 24, Column: 5 }
Function:        partition
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.039000e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 18, Column: 1 }
Function:        partition
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.040000e+03'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: quicksort.c, Line: 19, Column: 0 }
Function:        partition
Args:
  - NumStackBytes:   '0'
  - String:          ' stack bytes in function '''
  - Function:        partition
  - String:          ''''
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 20, Column: 20 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      entry
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.cond1
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 27, Column: 22 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.cond4
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.cond4
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 32, Column: 15 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.end9
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 14, Column: 10 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      if.end12
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        partition
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.end13
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: quicksort.c, Line: 19, Column: 0 }
Function:        partition
Args:
  - NumInstructions: '25'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        quicksort
Args:
  - NumVRCopies:     '1'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.612800e+04'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 24, Column: 5 }
Function:        quicksort
Args:
  - NumVRCopies:     '2'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.662400e+04'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 43, Column: 9 }
Function:        quicksort
Args:
  - NumVRCopies:     '5'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.667200e+04'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 41, Column: 1 }
Function:        quicksort
Args:
  - NumVRCopies:     '7'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '1.667400e+04'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
Function:        quicksort
Args:
  - NumStackBytes:   '24'
  - String:          ' stack bytes in function '''
  - Function:        quicksort
  - String:          ''''
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 43, Column: 11 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      entry
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      if.end.lr.ph
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 14, Column: 12 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      partition.exit
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 20, Column: 20 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      if.end
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 26, Column: 16 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.cond1.i
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 27, Column: 22 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.cond4.i
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 27, Column: 9 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.cond4.i
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 32, Column: 15 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      while.end9.i
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 14, Column: 10 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      if.end12.i
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 48, Column: 1 }
Function:        quicksort
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      return
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: quicksort.c, Line: 42, Column: 0 }
Function:        quicksort
Args:
  - NumInstructions: '43'
  - String:          ' instructions in function'
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: quicksort.c, Line: 50, Column: 1 }
Function:        main
Args:
  - NumVRCopies:     '3'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '3.000000e+00'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
Function:        main
Args:
  - NumStackBytes:   '8'
  - String:          ' stack bytes in function '''
  - Function:        main
  - String:          ''''
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: quicksort.c, Line: 55, Column: 38 }
Function:        main
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      entry
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '18'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: quicksort.c, Line: 51, Column: 0 }
Function:        main
Args:
  - NumInstructions: '18'
  - String:          ' instructions in function'
...
